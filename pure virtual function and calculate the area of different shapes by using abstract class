#include <iostream>
                     using namespace std;
                     class Shape {
                    public:
                    virtual void area() = 0;   // pure virtual function
                     };
                     class Rectangle : public Shape {
                     int length, breadth;
                    public:
                     Rectangle(int l, int b) {
                        length = l;
                        breadth = b;
                   }
                    void area() {
                    cout << "Area of Rectangle = " << length * breadth << endl;
                       }
                    };
                   class Circle : public Shape {
                    float radius;
                   public:
                   Circle(float r) {
                    radius = r;
                   }
                    void area() {
                       cout << "Area of Circle = " << 3.14 * radius * radius << endl;
                              }
                       };
                    class Triangle : public Shape {
                    float base, height;
                     public:
                    Triangle(float b, float h) {
                       base = b;
                    height = h;
                      }
                      void area() {
                     cout << "Area of Triangle = " << 0.5 * base * height << endl;
                          }
                    };
                  int main() {
                    Shape *sptr;   // base class pointer
                  Rectangle r(10, 5);
                 sptr= &r;
                sptr->area();
                  Circle c(3);
                   sptr= &c;
                    sptr->area();

                  Triangle t(6.0f, 4.0f);
                  sptr= &t;
                    sptr->area();

                 return 0;
                  }
